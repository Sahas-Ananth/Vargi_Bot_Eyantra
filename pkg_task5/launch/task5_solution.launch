<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <include file="$(find pkg_vb_sim)/launch/task5_simulation.launch" />

    <!-- Launch Moveit move_group Node -->
    <include file="$(find pkg_vb_sim)/launch/two_ur5_move_group.launch"/>

    <group ns="ur5_1">
        <arg name="scene_file" default="$(find pkg_task5)/config/rviz/ur5_1_kiva_pod.scene"/> 
        <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
    </group>

    <group ns="ur5_2">
        <arg name="scene_file" default="$(find pkg_task5)/config/rviz/ur5_2_sorting.scene"/> 
        <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
    </group>

    <!-- Run Task-5 sorting ROS Nodes -->

    <!-- This node detects the color of packages and stores them in param server -->
    <node name= "node_t5_color_detect" pkg= "pkg_task5" type="color_detect.py" output="screen"/> 

    <!-- This node controls the UR5 robot which picks and places the packages on the conveyer belt using moveit commander -->
    <node name= "node_t5_picker_control" pkg= "pkg_task5" type="UR5_package_picker.py" output="screen"/> 
    
    <!-- This node gets the packages under logical camera2 and sends actions to UR5 sorted to pick them up -->
    <node name= "node_t5_logical_camera2" pkg= "pkg_task5" type="LC2Control.py" output="screen"/>

    <!-- This node controls the UR5 robot which sorts the incoming packages according to its colour using moveit commander -->
    <node name= "node_t5_sorter_control" pkg= "pkg_task5" type="UR5_package_sorter.py" output="screen"/> 

    <!-- <node name= "node_t5_spreadsheet_updater" pkg= "pkg_task5" type="UR5_package_sorter.py" output="screen"/> -->
    

    <rosparam file="$(find pkg_task5)/config/config_iot_ros.yaml"/>
    <node pkg="pkg_ros_iot_bridge" type="node_action_server_ros_iot_bridge.py" name="node_action_server_ros_iot_bridge" output="screen"/>

    <!-- Recording Bag File for Submission -->
    <arg name="record" default="false"/>
    <arg name="rec_name" default="t5.bag"/>

    <group if="$(arg record)">
        <node name="rosbag_record_pick" pkg="rosbag" type="record"
                args="record -O $(find pkg_task5)/bag_files/$(arg rec_name) /eyrc/vb/ur5_1/vacuum_gripper/logical_camera/ur5_1 /eyrc/vb/ur5_2/vacuum_gripper/logical_camera/ur5_2" output="screen"/>
    </group>

</launch>